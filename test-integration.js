// Script de prueba para verificar la integraci√≥n de reCAPTCHA
// Ejecutar en la consola del navegador en la p√°gina del formulario

console.log('üß™ Iniciando pruebas de integraci√≥n de reCAPTCHA...');

// Funci√≥n para simular el env√≠o del formulario
async function testFormSubmission() {
  console.log('üìù Simulando env√≠o de formulario...');
  
  // Datos de prueba
  const testData = {
    name: 'Test User',
    email: 'test@example.com',
    phone: '+34612345678',
    operation: 'Alquiler',
    zone: 'Centro',
    recaptchaToken: 'test_token_123'
  };
  
  try {
    // Simular la llamada a tu API
    const response = await fetch('https://api.metodovende.es/prod/submit-form', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });
    
    const result = await response.json();
    console.log('‚úÖ Respuesta del servidor:', result);
    
    if (response.ok) {
      console.log('üéâ Formulario enviado exitosamente');
    } else {
      console.log('‚ùå Error en el env√≠o:', result.error);
    }
    
  } catch (error) {
    console.error('üí• Error de conexi√≥n:', error);
  }
}

// Funci√≥n para verificar el estado del reCAPTCHA
function checkRecaptchaStatus() {
  console.log('üîç Verificando estado de reCAPTCHA...');
  
  // Verificar si grecaptcha est√° disponible
  if (typeof window.grecaptcha !== 'undefined') {
    console.log('‚úÖ grecaptcha est√° disponible');
    
    // Verificar si hay un widget renderizado
    const recaptchaElement = document.querySelector('.g-recaptcha');
    if (recaptchaElement) {
      console.log('‚úÖ Elemento de reCAPTCHA encontrado');
      
      // Verificar si tiene contenido
      if (recaptchaElement.children.length > 0) {
        console.log('‚úÖ Widget de reCAPTCHA renderizado');
      } else {
        console.log('‚ö†Ô∏è Elemento de reCAPTCHA vac√≠o');
      }
    } else {
      console.log('‚ùå Elemento de reCAPTCHA no encontrado');
    }
  } else {
    console.log('‚ùå grecaptcha no est√° disponible');
  }
}

// Funci√≥n para verificar la funci√≥n de callback
function checkCallbackFunction() {
  console.log('üîç Verificando funci√≥n de callback...');
  
  if (typeof window.onRecaptchaChange === 'function') {
    console.log('‚úÖ Funci√≥n de callback disponible');
  } else {
    console.log('‚ùå Funci√≥n de callback no disponible');
  }
}

// Funci√≥n para verificar la configuraci√≥n
function checkConfiguration() {
  console.log('üîç Verificando configuraci√≥n...');
  
  // Verificar site key
  const recaptchaElement = document.querySelector('.g-recaptcha');
  if (recaptchaElement) {
    const siteKey = recaptchaElement.getAttribute('data-sitekey');
    console.log('üîë Site Key:', siteKey);
    
    if (siteKey === '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI') {
      console.log('‚úÖ Usando site key de prueba (desarrollo)');
    } else if (siteKey === '6LcvpngrAAAAANqmo28MvQayGcfjEatSBT7C_ziL') {
      console.log('‚úÖ Usando site key de producci√≥n');
    } else {
      console.log('‚ö†Ô∏è Site key desconocida');
    }
  }
  
  // Verificar callback
  const callback = recaptchaElement?.getAttribute('data-callback');
  console.log('üìû Callback:', callback);
}

// Funci√≥n principal de pruebas
function runAllTests() {
  console.log('üöÄ Iniciando todas las pruebas...\n');
  
  checkConfiguration();
  console.log('');
  
  checkRecaptchaStatus();
  console.log('');
  
  checkCallbackFunction();
  console.log('');
  
  console.log('üìã Resumen de pruebas completado');
  console.log('üí° Para probar el env√≠o, ejecuta: testFormSubmission()');
}

// Ejecutar pruebas autom√°ticamente
setTimeout(runAllTests, 2000);

// Exponer funciones para uso manual
window.testFormSubmission = testFormSubmission;
window.checkRecaptchaStatus = checkRecaptchaStatus;
window.checkCallbackFunction = checkCallbackFunction;
window.checkConfiguration = checkConfiguration;
window.runAllTests = runAllTests;

console.log('üìö Funciones de prueba disponibles:');
console.log('- testFormSubmission()');
console.log('- checkRecaptchaStatus()');
console.log('- checkCallbackFunction()');
console.log('- checkConfiguration()');
console.log('- runAllTests()'); 